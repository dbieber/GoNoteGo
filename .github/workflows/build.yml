name: Build image, lint, and run tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
      - name: Lint with ruff
        run: |
          ruff .
      - name: Test with pytest
        run: |
          python -m pytest

  build_image:
    runs-on: ubuntu-latest
    steps:
      - uses: pguyot/arm-runner-action@v2
        id: build_image
        with:
          base_image: https://downloads.raspberrypi.com/raspios_armhf/images/raspios_armhf-2024-03-15/2024-03-15-raspios-bookworm-armhf.img.xz
          image_additional_mb: 4000
          commands: |
            echo "Updating!"
            sudo apt update

            echo "Installing dependencies!"
            sudo apt install -y git firefox-esr xvfb portaudio19-dev libatlas-base-dev redis-server espeak rustc python3-dev

            echo "Installing Go Note Go!"
            mkdir -p /home/pi/code/github/dbieber
            cd /home/pi/code/github/dbieber
            git clone https://github.com/dbieber/GoNoteGo.git
            cd GoNoteGo
            # Checkout the specific commit
            git checkout $GITHUB_SHA

            echo "Setting up Python environment"
            mkdir out
            python3 -m venv env
            ./env/bin/pip install -e .  # Install Python dependencies

            echo "Start on boot"
            sudo cat /etc/rc.local
            sudo sed '/^exit 0/i \
                /home/pi/code/github/dbieber/GoNoteGo/env/bin/supervisord -c /home/pi/code/github/dbieber/GoNoteGo/gonotego/supervisord.conf
                ' /etc/rc.local > ./rc.local.modified && mv ./rc.local.modified /etc/rc.local

            echo "Setting up Go Note Go:"
            cp gonotego/settings/secure_settings_template.py gonotego/settings/secure_settings.py
            echo "Manually edit secure_settings.py to configure your settings."

            mkdir /home/pi/secrets
            echo "Manually transfer secrets to /home/pi/secrets."

            echo "Install geckodriver to known location"
            cd
            wget https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-arm7hf.tar.gz
            tar -xvf geckodriver-v0.23.0-arm7hf.tar.gz
            rm geckodriver-v0.23.0-arm7hf.tar.gz
            sudo mv geckodriver /usr/local/bin

      - name: Compress the release image
        run: |
          mv ${{ steps.build_image.outputs.image }} my-release-image.img
          xz -0 -T 0 -v my-release-image.img
      - name: Upload release image
        uses: actions/upload-artifact@v4
        with:
          name: Release image
          path: my-release-image.img.xz
